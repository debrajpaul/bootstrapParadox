{"version":3,"sources":["typography/Base.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","isLineClampSupport","isTextOverflowSupport","wrapperDecorations","content","mark","code","underline","del","strong","currentContent","wrap","needed","tag","React","createElement","children","ELLIPSIS_STR","Base","arguments","state","edit","copied","ellipsisText","ellipsisContent","isEllipsis","expanded","clientRendered","onExpandClick","getEllipsis","onExpand","setState","onEditClick","triggerEdit","onEditChange","value","getEditable","onChange","onEditCancel","onCopyClick","props","copyable","copyConfig","text","undefined","String","onCopy","copyId","window","setTimeout","setContentRef","node","setEditRef","editIcon","onStart","focus","resizeOnNextFrame","raf","cancel","rafId","syncEllipsis","prevProps","ellipsis","prevEllipsis","rows","clearTimeout","editable","editing","expandable","canUseCSSEllipsis","every","child","renderOperations","forceRender","prefixCls","expandStr","editStr","title","copiedStr","copyStr","className","style","forceRenderExpanded","renderExpand","renderEdit","renderCopy","filter","_a","component","type","disabled","restProps","textProps","configConsumerProps","cssEllipsis","cssTextOverflow","cssLineClamp","textNode","ariaLabel","copy","expand","WebkitLineClamp","renderEditInput","renderContent","nextProps","Component","defaultProps"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport copy from 'copy-to-clipboard';\nimport omit from 'omit.js';\nimport { withConfigConsumer, configConsumerProps } from '../config-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport warning from '../_util/warning';\nimport TransButton from '../_util/transButton';\nimport ResizeObserver from '../_util/resizeObserver';\nimport raf from '../_util/raf';\nimport isStyleSupport from '../_util/styleChecker';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Typography from './Typography';\nimport Editable from './Editable';\nimport { measure } from './util';\nconst isLineClampSupport = isStyleSupport('webkitLineClamp');\nconst isTextOverflowSupport = isStyleSupport('textOverflow');\nfunction wrapperDecorations({ mark, code, underline, delete: del, strong }, content) {\n    let currentContent = content;\n    function wrap(needed, tag) {\n        if (!needed)\n            return;\n        currentContent = React.createElement(tag, {\n            children: currentContent,\n        });\n    }\n    wrap(strong, 'strong');\n    wrap(underline, 'u');\n    wrap(del, 'del');\n    wrap(code, 'code');\n    wrap(mark, 'mark');\n    return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nclass Base extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            edit: false,\n            copied: false,\n            ellipsisText: '',\n            ellipsisContent: null,\n            isEllipsis: false,\n            expanded: false,\n            clientRendered: false,\n        };\n        // =============== Expend ===============\n        this.onExpandClick = () => {\n            const { onExpand } = this.getEllipsis();\n            this.setState({ expanded: true });\n            if (onExpand) {\n                onExpand();\n            }\n        };\n        // ================ Edit ================\n        this.onEditClick = () => {\n            this.triggerEdit(true);\n        };\n        this.onEditChange = (value) => {\n            const { onChange } = this.getEditable();\n            if (onChange) {\n                onChange(value);\n            }\n            this.triggerEdit(false);\n        };\n        this.onEditCancel = () => {\n            this.triggerEdit(false);\n        };\n        // ================ Copy ================\n        this.onCopyClick = () => {\n            const { children, copyable } = this.props;\n            const copyConfig = Object.assign({}, (typeof copyable === 'object' ? copyable : null));\n            if (copyConfig.text === undefined) {\n                copyConfig.text = String(children);\n            }\n            copy(copyConfig.text || '');\n            this.setState({ copied: true }, () => {\n                if (copyConfig.onCopy) {\n                    copyConfig.onCopy();\n                }\n                this.copyId = window.setTimeout(() => {\n                    this.setState({ copied: false });\n                }, 3000);\n            });\n        };\n        this.setContentRef = (node) => {\n            this.content = node;\n        };\n        this.setEditRef = (node) => {\n            this.editIcon = node;\n        };\n        this.triggerEdit = (edit) => {\n            const { onStart } = this.getEditable();\n            if (edit && onStart) {\n                onStart();\n            }\n            this.setState({ edit }, () => {\n                if (!edit && this.editIcon) {\n                    this.editIcon.focus();\n                }\n            });\n        };\n        // ============== Ellipsis ==============\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.rafId);\n            this.rafId = raf(() => {\n                // Do not bind `syncEllipsis`. It need for test usage on prototype\n                this.syncEllipsis();\n            });\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        const { children, editable } = nextProps;\n        warning(!editable || typeof children === 'string', 'Typography', 'When `editable` is enabled, the `children` should use string.');\n        return {};\n    }\n    componentDidMount() {\n        this.setState({ clientRendered: true });\n        this.resizeOnNextFrame();\n    }\n    componentDidUpdate(prevProps) {\n        const ellipsis = this.getEllipsis();\n        const prevEllipsis = this.getEllipsis(prevProps);\n        if (this.props.children !== prevProps.children || ellipsis.rows !== prevEllipsis.rows) {\n            this.resizeOnNextFrame();\n        }\n    }\n    componentWillUnmount() {\n        window.clearTimeout(this.copyId);\n        raf.cancel(this.rafId);\n    }\n    getEditable(props) {\n        const { edit } = this.state;\n        const { editable } = props || this.props;\n        if (!editable)\n            return { editing: edit };\n        return Object.assign({ editing: edit }, (typeof editable === 'object' ? editable : null));\n    }\n    getEllipsis(props) {\n        const { ellipsis } = props || this.props;\n        if (!ellipsis)\n            return {};\n        return Object.assign({ rows: 1, expandable: false }, (typeof ellipsis === 'object' ? ellipsis : null));\n    }\n    canUseCSSEllipsis() {\n        const { clientRendered } = this.state;\n        const { editable, copyable } = this.props;\n        const { rows, expandable } = this.getEllipsis();\n        // Can't use css ellipsis since we need to provide the place for button\n        if (editable || copyable || expandable || !clientRendered) {\n            return false;\n        }\n        if (rows === 1) {\n            return isTextOverflowSupport;\n        }\n        return isLineClampSupport;\n    }\n    syncEllipsis() {\n        const { ellipsisText, isEllipsis, expanded } = this.state;\n        const { rows } = this.getEllipsis();\n        const { children } = this.props;\n        if (!rows || rows < 0 || !this.content || expanded)\n            return;\n        // Do not measure if css already support ellipsis\n        if (this.canUseCSSEllipsis())\n            return;\n        warning(toArray(children).every((child) => typeof child === 'string'), 'Typography', '`ellipsis` should use string as children only.');\n        const { content, text, ellipsis } = measure(this.content, rows, children, this.renderOperations(true), ELLIPSIS_STR);\n        if (ellipsisText !== text || isEllipsis !== ellipsis) {\n            this.setState({ ellipsisText: text, ellipsisContent: content, isEllipsis: ellipsis });\n        }\n    }\n    renderExpand(forceRender) {\n        const { expandable } = this.getEllipsis();\n        const { prefixCls } = this.props;\n        const { expanded, isEllipsis } = this.state;\n        if (!expandable)\n            return null;\n        // force render expand icon for measure usage or it will cause dead loop\n        if (!forceRender && (expanded || !isEllipsis))\n            return null;\n        return (<a key=\"expand\" className={`${prefixCls}-expand`} onClick={this.onExpandClick} aria-label={this.expandStr}>\n        {this.expandStr}\n      </a>);\n    }\n    renderEdit() {\n        const { editable, prefixCls } = this.props;\n        if (!editable)\n            return;\n        return (<Tooltip key=\"edit\" title={this.editStr}>\n        <TransButton ref={this.setEditRef} className={`${prefixCls}-edit`} onClick={this.onEditClick} aria-label={this.editStr}>\n          <Icon role=\"button\" type=\"edit\"/>\n        </TransButton>\n      </Tooltip>);\n    }\n    renderCopy() {\n        const { copied } = this.state;\n        const { copyable, prefixCls } = this.props;\n        if (!copyable)\n            return;\n        const title = copied ? this.copiedStr : this.copyStr;\n        return (<Tooltip key=\"copy\" title={title}>\n        <TransButton className={classNames(`${prefixCls}-copy`, copied && `${prefixCls}-copy-success`)} onClick={this.onCopyClick} aria-label={title}>\n          <Icon role=\"button\" type={copied ? 'check' : 'copy'}/>\n        </TransButton>\n      </Tooltip>);\n    }\n    renderEditInput() {\n        const { children, prefixCls, className, style } = this.props;\n        return (<Editable value={typeof children === 'string' ? children : ''} onSave={this.onEditChange} onCancel={this.onEditCancel} prefixCls={prefixCls} className={className} style={style}/>);\n    }\n    renderOperations(forceRenderExpanded) {\n        return [this.renderExpand(forceRenderExpanded), this.renderEdit(), this.renderCopy()].filter(node => node);\n    }\n    renderContent() {\n        const { ellipsisContent, isEllipsis, expanded } = this.state;\n        const _a = this.props, { component, children, className, prefixCls, type, disabled, style } = _a, restProps = __rest(_a, [\"component\", \"children\", \"className\", \"prefixCls\", \"type\", \"disabled\", \"style\"]);\n        const { rows } = this.getEllipsis();\n        const textProps = omit(restProps, [\n            'prefixCls',\n            'editable',\n            'copyable',\n            'ellipsis',\n            'mark',\n            'underline',\n            'mark',\n            'code',\n            'delete',\n            'underline',\n            'strong',\n            ...configConsumerProps,\n        ]);\n        const cssEllipsis = this.canUseCSSEllipsis();\n        const cssTextOverflow = rows === 1 && cssEllipsis;\n        const cssLineClamp = rows && rows > 1 && cssEllipsis;\n        let textNode = children;\n        let ariaLabel = null;\n        // Only use js ellipsis when css ellipsis not support\n        if (rows && isEllipsis && !expanded && !cssEllipsis) {\n            ariaLabel = String(children);\n            // We move full content to outer element to avoid repeat read the content by accessibility\n            textNode = (<span title={String(children)} aria-hidden=\"true\">\n          {ellipsisContent}\n          {ELLIPSIS_STR}\n        </span>);\n        }\n        textNode = wrapperDecorations(this.props, textNode);\n        return (<LocaleReceiver componentName=\"Text\">\n        {({ edit, copy: copyStr, copied, expand }) => {\n            this.editStr = edit;\n            this.copyStr = copyStr;\n            this.copiedStr = copied;\n            this.expandStr = expand;\n            return (<ResizeObserver onResize={this.resizeOnNextFrame} disabled={!rows}>\n              <Typography className={classNames(className, {\n                [`${prefixCls}-${type}`]: type,\n                [`${prefixCls}-disabled`]: disabled,\n                [`${prefixCls}-ellipsis`]: rows,\n                [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n                [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp,\n            })} style={Object.assign({}, style, { WebkitLineClamp: cssLineClamp ? rows : null })} component={component} setContentRef={this.setContentRef} aria-label={ariaLabel} {...textProps}>\n                {textNode}\n                {this.renderOperations()}\n              </Typography>\n            </ResizeObserver>);\n        }}\n      </LocaleReceiver>);\n    }\n    render() {\n        const { editing } = this.getEditable();\n        if (editing) {\n            return this.renderEditInput();\n        }\n        return this.renderContent();\n    }\n}\nBase.defaultProps = {\n    children: '',\n};\npolyfill(Base);\nexport default withConfigConsumer({\n    prefixCls: 'typography',\n})(Base);\n"],"file":"Base.js"}