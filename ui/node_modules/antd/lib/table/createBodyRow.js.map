{"version":3,"sources":["table/createBodyRow.jsx"],"names":["createTableRow","Component","BodyRow","props","store","getState","selectedRowKeys","state","selected","indexOf","rowKey","subscribe","unsubscribe","setState","rowProps","className","prefixCls","React","createElement","children"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACe,SAASA,cAAT,GAA0C;AAAA,MAAlBC,SAAkB,uEAAN,IAAM;;AAAA,MAC/CC,OAD+C;AAAA;AAAA;AAAA;;AAEjD,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AACA,YAAKC,KAAL,GAAaD,KAAK,CAACC,KAAnB;;AAFe,iCAGa,MAAKA,KAAL,CAAWC,QAAX,EAHb;AAAA,UAGPC,eAHO,wBAGPA,eAHO;;AAIf,YAAKC,KAAL,GAAa;AACTC,QAAAA,QAAQ,EAAEF,eAAe,CAACG,OAAhB,CAAwBN,KAAK,CAACO,MAA9B,KAAyC;AAD1C,OAAb;AAJe;AAOlB;;AATgD;AAAA;AAAA,0CAU7B;AAChB,aAAKC,SAAL;AACH;AAZgD;AAAA;AAAA,6CAa1B;AACnB,YAAI,KAAKC,WAAT,EAAsB;AAClB,eAAKA,WAAL;AACH;AACJ;AAjBgD;AAAA;AAAA,kCAkBrC;AAAA;;AAAA,0BACkB,KAAKT,KADvB;AAAA,YACAC,KADA,eACAA,KADA;AAAA,YACOM,MADP,eACOA,MADP;AAER,aAAKE,WAAL,GAAmBR,KAAK,CAACO,SAAN,CAAgB,YAAM;AAAA,sCACT,MAAI,CAACP,KAAL,CAAWC,QAAX,EADS;AAAA,cAC7BC,eAD6B,yBAC7BA,eAD6B;;AAErC,cAAME,QAAQ,GAAGF,eAAe,CAACG,OAAhB,CAAwBC,MAAxB,KAAmC,CAApD;;AACA,cAAIF,QAAQ,KAAK,MAAI,CAACD,KAAL,CAAWC,QAA5B,EAAsC;AAClC,YAAA,MAAI,CAACK,QAAL,CAAc;AAAEL,cAAAA,QAAQ,EAARA;AAAF,aAAd;AACH;AACJ,SANkB,CAAnB;AAOH;AA3BgD;AAAA;AAAA,+BA4BxC;AACL,YAAMM,QAAQ,GAAG,sBAAK,KAAKX,KAAV,EAAiB,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,CAAjB,CAAjB;AACA,YAAMY,SAAS,GAAG,6BAAW,KAAKZ,KAAL,CAAWY,SAAtB,gCACV,KAAKZ,KAAL,CAAWa,SADD,oBAC4B,KAAKT,KAAL,CAAWC,QADvC,EAAlB;AAGA,eAAOS,KAAK,CAACC,aAAN,CAAoBjB,SAApB,EAA+B,SAAc,EAAd,EAAkBa,QAAlB,EAA4B;AAAEC,UAAAA,SAAS,EAATA;AAAF,SAA5B,CAA/B,EAA2E,KAAKZ,KAAL,CAAWgB,QAAtF,CAAP;AACH;AAlCgD;;AAAA;AAAA,IAC/BF,KAAK,CAAChB,SADyB;;AAoCrD,SAAOC,OAAP;AACH","sourcesContent":["import * as React from 'react';\nimport classnames from 'classnames';\nimport omit from 'omit.js';\nexport default function createTableRow(Component = 'tr') {\n    class BodyRow extends React.Component {\n        constructor(props) {\n            super(props);\n            this.store = props.store;\n            const { selectedRowKeys } = this.store.getState();\n            this.state = {\n                selected: selectedRowKeys.indexOf(props.rowKey) >= 0,\n            };\n        }\n        componentDidMount() {\n            this.subscribe();\n        }\n        componentWillUnmount() {\n            if (this.unsubscribe) {\n                this.unsubscribe();\n            }\n        }\n        subscribe() {\n            const { store, rowKey } = this.props;\n            this.unsubscribe = store.subscribe(() => {\n                const { selectedRowKeys } = this.store.getState();\n                const selected = selectedRowKeys.indexOf(rowKey) >= 0;\n                if (selected !== this.state.selected) {\n                    this.setState({ selected });\n                }\n            });\n        }\n        render() {\n            const rowProps = omit(this.props, ['prefixCls', 'rowKey', 'store']);\n            const className = classnames(this.props.className, {\n                [`${this.props.prefixCls}-row-selected`]: this.state.selected,\n            });\n            return React.createElement(Component, Object.assign({}, rowProps, { className }), this.props.children);\n        }\n    }\n    return BodyRow;\n}\n"],"file":"createBodyRow.js"}