{"version":3,"sources":["badge/index.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","isPresetColor","color","PresetColorTypes","Badge","arguments","renderBadge","getPrefixCls","_a","props","count","showZero","customizePrefixCls","prefixCls","customizeScrollNumberPrefixCls","scrollNumberPrefixCls","overflowCount","className","style","children","dot","status","text","offset","title","restProps","scrollNumber","renderBadgeNumber","statusText","renderStatusText","statusCls","hasStatus","statusStyle","background","styleWithOffset","getStyleWithOffset","statusTextColor","getBadgeClassName","numberedDispayCount","getNumberedDispayCount","isZero","displayCount","getDispayCount","isDot","isEmpty","undefined","right","parseInt","marginTop","hidden","isHidden","customNode","React","cloneElement","scrollNumberCls","toString","renderDispayComponent","getScrollNumberTitle","Component","defaultProps","propTypes","PropTypes","node","bool","number"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\nfunction isPresetColor(color) {\n    return PresetColorTypes.indexOf(color) !== -1;\n}\nexport default class Badge extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBadge = ({ getPrefixCls }) => {\n            const _a = this.props, { count, showZero, prefixCls: customizePrefixCls, scrollNumberPrefixCls: customizeScrollNumberPrefixCls, overflowCount, className, style, children, dot, status, text, offset, title, color } = _a, restProps = __rest(_a, [\"count\", \"showZero\", \"prefixCls\", \"scrollNumberPrefixCls\", \"overflowCount\", \"className\", \"style\", \"children\", \"dot\", \"status\", \"text\", \"offset\", \"title\", \"color\"]);\n            const prefixCls = getPrefixCls('badge', customizePrefixCls);\n            const scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n            const scrollNumber = this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n            const statusText = this.renderStatusText(prefixCls);\n            const statusCls = classNames({\n                [`${prefixCls}-status-dot`]: this.hasStatus(),\n                [`${prefixCls}-status-${status}`]: !!status,\n                [`${prefixCls}-status-${color}`]: isPresetColor(color),\n            });\n            const statusStyle = {};\n            if (color && !isPresetColor(color)) {\n                statusStyle.background = color;\n            }\n            // <Badge status=\"success\" />\n            if (!children && this.hasStatus()) {\n                const styleWithOffset = this.getStyleWithOffset();\n                const statusTextColor = styleWithOffset && styleWithOffset.color;\n                return (<span {...restProps} className={this.getBadgeClassName(prefixCls)} style={styleWithOffset}>\n          <span className={statusCls} style={statusStyle}/>\n          <span style={{ color: statusTextColor }} className={`${prefixCls}-status-text`}>\n            {text}\n          </span>\n        </span>);\n            }\n            return (<span {...restProps} className={this.getBadgeClassName(prefixCls)}>\n        {children}\n        <Animate component=\"\" showProp=\"data-show\" transitionName={children ? `${prefixCls}-zoom` : ''} transitionAppear>\n          {scrollNumber}\n        </Animate>\n        {statusText}\n      </span>);\n        };\n    }\n    getBadgeClassName(prefixCls) {\n        const { className, children } = this.props;\n        return classNames(className, prefixCls, {\n            [`${prefixCls}-status`]: this.hasStatus(),\n            [`${prefixCls}-not-a-wrapper`]: !children,\n        });\n    }\n    hasStatus() {\n        const { status, color } = this.props;\n        return !!status || !!color;\n    }\n    isZero() {\n        const numberedDispayCount = this.getNumberedDispayCount();\n        return numberedDispayCount === '0' || numberedDispayCount === 0;\n    }\n    isDot() {\n        const { dot } = this.props;\n        const isZero = this.isZero();\n        return (dot && !isZero) || this.hasStatus();\n    }\n    isHidden() {\n        const { showZero } = this.props;\n        const displayCount = this.getDispayCount();\n        const isZero = this.isZero();\n        const isDot = this.isDot();\n        const isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n        return (isEmpty || (isZero && !showZero)) && !isDot;\n    }\n    getNumberedDispayCount() {\n        const { count, overflowCount } = this.props;\n        const displayCount = count > overflowCount ? `${overflowCount}+` : count;\n        return displayCount;\n    }\n    getDispayCount() {\n        const isDot = this.isDot();\n        // dot mode don't need count\n        if (isDot) {\n            return '';\n        }\n        return this.getNumberedDispayCount();\n    }\n    getScrollNumberTitle() {\n        const { title, count } = this.props;\n        if (title) {\n            return title;\n        }\n        return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n    getStyleWithOffset() {\n        const { offset, style } = this.props;\n        return offset\n            ? Object.assign({ right: -parseInt(offset[0], 10), marginTop: offset[1] }, style) : style;\n    }\n    renderStatusText(prefixCls) {\n        const { text } = this.props;\n        const hidden = this.isHidden();\n        return hidden || !text ? null : <span className={`${prefixCls}-status-text`}>{text}</span>;\n    }\n    renderDispayComponent() {\n        const { count } = this.props;\n        const customNode = count;\n        if (!customNode || typeof customNode !== 'object') {\n            return undefined;\n        }\n        return React.cloneElement(customNode, {\n            style: Object.assign({}, this.getStyleWithOffset(), (customNode.props && customNode.props.style)),\n        });\n    }\n    renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n        const { status, count } = this.props;\n        const displayCount = this.getDispayCount();\n        const isDot = this.isDot();\n        const hidden = this.isHidden();\n        const scrollNumberCls = classNames({\n            [`${prefixCls}-dot`]: isDot,\n            [`${prefixCls}-count`]: !isDot,\n            [`${prefixCls}-multiple-words`]: !isDot && count && count.toString && count.toString().length > 1,\n            [`${prefixCls}-status-${status}`]: this.hasStatus(),\n        });\n        return hidden ? null : (<ScrollNumber prefixCls={scrollNumberPrefixCls} data-show={!hidden} className={scrollNumberCls} count={displayCount} displayComponent={this.renderDispayComponent()} // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n         title={this.getScrollNumberTitle()} style={this.getStyleWithOffset()} key=\"scrollNumber\"/>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBadge}</ConfigConsumer>;\n    }\n}\nBadge.defaultProps = {\n    count: null,\n    showZero: false,\n    dot: false,\n    overflowCount: 99,\n};\nBadge.propTypes = {\n    count: PropTypes.node,\n    showZero: PropTypes.bool,\n    dot: PropTypes.bool,\n    overflowCount: PropTypes.number,\n};\n"],"file":"index.js"}