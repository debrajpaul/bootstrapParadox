{"version":3,"sources":["upload/Upload.jsx"],"names":["Upload","props","onStart","file","targetItem","status","nextFileList","state","fileList","concat","fileIndex","uid","push","onChange","window","FormData","autoUpdateProgress","onSuccess","response","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleManualRemove","upload","abort","handleRemove","info","setState","onFileDrop","dragState","type","beforeUpload","result","map","fileToObject","item","then","saveUpload","node","renderUploadList","locale","showUploadList","listType","onPreview","previewFile","disabled","showRemoveIcon","showPreviewIcon","renderUpload","getPrefixCls","customizePrefixCls","prefixCls","className","children","rcUploadProps","uploadList","defaultLocale","dragCls","some","uploadButtonCls","id","uploadButton","undefined","display","defaultFileList","_","getPercent","curPercent","progressTimer","setInterval","onRemove","Promise","resolve","ret","removedFileList","clearInterval","nextProps","React","Component","defaultProps","multiple","action","data","accept","T","supportServerRender"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { ConfigConsumer } from '../config-provider';\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onStart = (file) => {\n            const targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            const nextFileList = this.state.fileList.concat();\n            const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n            if (fileIndex === -1) {\n                nextFileList.push(targetItem);\n            }\n            else {\n                nextFileList[fileIndex] = targetItem;\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n            // fix ie progress\n            if (!window.FormData) {\n                this.autoUpdateProgress(0, targetItem);\n            }\n        };\n        this.onSuccess = (response, file) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) {\n                /* do nothing */\n            }\n            const fileList = this.state.fileList;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            const fileList = this.state.fileList;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList: this.state.fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            const fileList = this.state.fileList;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleManualRemove = (file) => {\n            if (this.upload) {\n                this.upload.abort(file);\n            }\n            this.handleRemove(file);\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.beforeUpload = (file, fileList) => {\n            if (!this.props.beforeUpload) {\n                return true;\n            }\n            const result = this.props.beforeUpload(file, fileList);\n            if (result === false) {\n                this.onChange({\n                    file,\n                    fileList: uniqBy(this.state.fileList.concat(fileList.map(fileToObject)), (item) => item.uid),\n                });\n                return false;\n            }\n            if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        this.saveUpload = (node) => {\n            this.upload = node;\n        };\n        this.renderUploadList = (locale) => {\n            const { showUploadList, listType, onPreview, previewFile, disabled } = this.props;\n            const { showRemoveIcon, showPreviewIcon } = showUploadList;\n            return (<UploadList listType={listType} items={this.state.fileList} previewFile={previewFile} onPreview={onPreview} onRemove={this.handleManualRemove} showRemoveIcon={!disabled && showRemoveIcon} showPreviewIcon={showPreviewIcon} locale={Object.assign({}, locale, this.props.locale)}/>);\n        };\n        this.renderUpload = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, showUploadList, listType, type, disabled, children, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const rcUploadProps = Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props, { prefixCls, beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            const uploadList = showUploadList ? (<LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>) : null;\n            if (type === 'drag') {\n                const dragCls = classNames(prefixCls, {\n                    [`${prefixCls}-drag`]: true,\n                    [`${prefixCls}-drag-uploading`]: this.state.fileList.some(file => file.status === 'uploading'),\n                    [`${prefixCls}-drag-hover`]: this.state.dragState === 'dragover',\n                    [`${prefixCls}-disabled`]: disabled,\n                });\n                return (<span className={className}>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop}>\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n            }\n            const uploadButtonCls = classNames(prefixCls, {\n                [`${prefixCls}-select`]: true,\n                [`${prefixCls}-select-${listType}`]: true,\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Remove id to avoid open by label when trigger is hidden\n            // https://github.com/ant-design/ant-design/issues/14298\n            // https://github.com/ant-design/ant-design/issues/16478\n            if (!children || disabled) {\n                delete rcUploadProps.id;\n            }\n            const uploadButton = (<div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload}/>\n      </div>);\n            if (listType === 'picture-card') {\n                return (<span className={classNames(className, `${prefixCls}-picture-card-wrapper`)}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n            }\n            return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n        };\n        this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop',\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('fileList' in nextProps) {\n            return {\n                fileList: nextProps.fileList || [],\n            };\n        }\n        return null;\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    autoUpdateProgress(_, file) {\n        const getPercent = genPercentAdd();\n        let curPercent = 0;\n        this.clearProgressTimer();\n        this.progressTimer = setInterval(() => {\n            curPercent = getPercent(curPercent);\n            this.onProgress({\n                percent: curPercent * 100,\n            }, file);\n        }, 200);\n    }\n    handleRemove(file) {\n        const { onRemove } = this.props;\n        const { status } = file;\n        file.status = 'removed'; // eslint-disable-line\n        Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n            // Prevent removing file\n            if (ret === false) {\n                file.status = status;\n                return;\n            }\n            const removedFileList = removeFileItem(file, this.state.fileList);\n            if (removedFileList) {\n                this.onChange({\n                    file,\n                    fileList: removedFileList,\n                });\n            }\n        });\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n    }\n}\nUpload.defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\npolyfill(Upload);\nexport default Upload;\n"],"file":"Upload.js"}