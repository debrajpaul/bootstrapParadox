{"version":3,"sources":["upload/UploadList.jsx"],"names":["UploadList","arguments","handleClose","file","onRemove","props","handlePreview","e","onPreview","preventDefault","renderUploadList","getPrefixCls","customizePrefixCls","prefixCls","items","listType","showPreviewIcon","showRemoveIcon","locale","list","map","progress","icon","status","uploading","thumbUrl","url","thumbnail","name","loadingProgress","progressAttr","percent","infoUploadingClass","linkProps","JSON","parse","preview","style","pointerEvents","opacity","previewIcon","undefined","previewFile","removeIcon","removeFile","removeIconClose","actions","message","response","error","statusText","uploadError","iconAndPreview","uid","listClassNames","animationDirection","forEach","isValidateFile","originFileObj","File","Blob","document","window","FileReader","then","previewDataUrl","forceUpdate","React","Component","defaultProps","strokeWidth","showInfo","previewImage"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport { previewImage, isImageUrl } from './utils';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        this.renderUploadList = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, locale, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'}/>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (listType === 'picture-card' && file.status === 'uploading') {\n                        icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n                    }\n                    else if (!file.thumbUrl && !file.url) {\n                        icon = (<Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" theme=\"twoTone\"/>);\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name} className={`${prefixCls}-list-item-image`}/>) : (<Icon type=\"file\" className={`${prefixCls}-list-item-icon`} theme=\"twoTone\"/>);\n                        icon = (<a className={`${prefixCls}-list-item-thumbnail`} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...this.props.progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const preview = file.url ? (<a target=\"_blank\" rel=\"noopener noreferrer\" className={`${prefixCls}-list-item-name`} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n          {file.name}\n        </a>) : (<span className={`${prefixCls}-list-item-name`} onClick={e => this.handlePreview(file, e)} title={file.name}>\n          {file.name}\n        </span>);\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <Icon type=\"eye-o\"/>\n        </a>) : null;\n                const removeIcon = showRemoveIcon ? (<Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const removeIconClose = showRemoveIcon ? (<Icon type=\"close\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' ? (<span className={`${prefixCls}-list-item-actions`}>\n            {previewIcon}\n            {removeIcon}\n          </span>) : (removeIconClose);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = file.status === 'error' ? (<Tooltip title={message}>\n            {icon}\n            {preview}\n          </Tooltip>) : (<span>\n            {icon}\n            {preview}\n          </span>);\n                return (<div className={infoUploadingClass} key={file.uid}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        const { listType, items, previewFile } = this.props;\n        if (listType !== 'picture' && listType !== 'picture-card') {\n            return;\n        }\n        (items || []).forEach(file => {\n            const isValidateFile = file.originFileObj instanceof File || file.originFileObj instanceof Blob;\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !isValidateFile ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            if (previewFile) {\n                previewFile(file.originFileObj).then((previewDataUrl) => {\n                    // Need append '' to avoid dead loop\n                    file.thumbUrl = previewDataUrl || '';\n                    this.forceUpdate();\n                });\n            }\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showPreviewIcon: true,\n    previewFile: previewImage,\n};\n"],"file":"UploadList.js"}