{"version":3,"sources":["menu/index.jsx"],"names":["React","RcMenu","Divider","ItemGroup","classNames","omit","SubMenu","Item","ConfigConsumer","animation","warning","polyfill","SiderContext","raf","MenuContext","InternalMenu","props","handleMouseEnter","e","restoreModeVerticalFromInline","onMouseEnter","handleTransitionEnd","widthCollapsed","propertyName","target","currentTarget","className","classNameValue","Object","prototype","toString","call","animVal","iconScaled","indexOf","handleClick","handleOpenChange","onClick","openKeys","setOpenKeys","onOpenChange","renderMenu","getPopupContainer","getPrefixCls","mounted","state","customizePrefixCls","prefixCls","theme","collapsedWidth","passProps","menuMode","getRealMenuMode","menuOpenAnimation","getMenuOpenAnimation","menuClassName","getInlineCollapsed","menuProps","mode","openTransitionName","openAnimation","siderCollapsed","undefined","defaultOpenKeys","switchingModeFromInline","inlineOpenKeys","prevProps","mountRafId","setState","cancel","inlineCollapsed","antdMenuTheme","nextProps","prevState","newState","Component","defaultProps","focusable","Menu","context"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcMenu, { Divider, ItemGroup } from 'rc-menu';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport SubMenu from './SubMenu';\nimport Item from './MenuItem';\nimport { ConfigConsumer } from '../config-provider';\nimport animation from '../_util/openAnimation';\nimport warning from '../_util/warning';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { SiderContext } from '../layout/Sider';\nimport raf from '../_util/raf';\nimport MenuContext from './MenuContext';\nclass InternalMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        // Restore vertical mode when menu is collapsed responsively when mounted\n        // https://github.com/ant-design/ant-design/issues/13104\n        // TODO: not a perfect solution, looking a new way to avoid setting switchingModeFromInline in this situation\n        this.handleMouseEnter = (e) => {\n            this.restoreModeVerticalFromInline();\n            const { onMouseEnter } = this.props;\n            if (onMouseEnter) {\n                onMouseEnter(e);\n            }\n        };\n        this.handleTransitionEnd = (e) => {\n            // when inlineCollapsed menu width animation finished\n            // https://github.com/ant-design/ant-design/issues/12864\n            const widthCollapsed = e.propertyName === 'width' && e.target === e.currentTarget;\n            // Fix SVGElement e.target.className.indexOf is not a function\n            // https://github.com/ant-design/ant-design/issues/15699\n            const { className } = e.target;\n            // SVGAnimatedString.animVal should be identical to SVGAnimatedString.baseVal, unless during an animation.\n            const classNameValue = Object.prototype.toString.call(className) === '[object SVGAnimatedString]'\n                ? className.animVal\n                : className;\n            // Fix for <Menu style={{ width: '100%' }} />, the width transition won't trigger when menu is collapsed\n            // https://github.com/ant-design/ant-design-pro/issues/2783\n            const iconScaled = e.propertyName === 'font-size' && classNameValue.indexOf('anticon') >= 0;\n            if (widthCollapsed || iconScaled) {\n                this.restoreModeVerticalFromInline();\n            }\n        };\n        this.handleClick = (e) => {\n            this.handleOpenChange([]);\n            const { onClick } = this.props;\n            if (onClick) {\n                onClick(e);\n            }\n        };\n        this.handleOpenChange = (openKeys) => {\n            this.setOpenKeys(openKeys);\n            const { onOpenChange } = this.props;\n            if (onOpenChange) {\n                onOpenChange(openKeys);\n            }\n        };\n        this.renderMenu = ({ getPopupContainer, getPrefixCls }) => {\n            const { mounted } = this.state;\n            const { prefixCls: customizePrefixCls, className, theme, collapsedWidth } = this.props;\n            const passProps = omit(this.props, ['collapsedWidth', 'siderCollapsed']);\n            const menuMode = this.getRealMenuMode();\n            const menuOpenAnimation = this.getMenuOpenAnimation(menuMode);\n            const prefixCls = getPrefixCls('menu', customizePrefixCls);\n            const menuClassName = classNames(className, `${prefixCls}-${theme}`, {\n                [`${prefixCls}-inline-collapsed`]: this.getInlineCollapsed(),\n            });\n            const menuProps = {\n                openKeys: this.state.openKeys,\n                onOpenChange: this.handleOpenChange,\n                className: menuClassName,\n                mode: menuMode,\n            };\n            if (menuMode !== 'inline') {\n                // closing vertical popup submenu after click it\n                menuProps.onClick = this.handleClick;\n                menuProps.openTransitionName = mounted ? menuOpenAnimation : '';\n            }\n            else {\n                menuProps.openAnimation = mounted ? menuOpenAnimation : {};\n            }\n            // https://github.com/ant-design/ant-design/issues/8587\n            if (this.getInlineCollapsed() &&\n                (collapsedWidth === 0 || collapsedWidth === '0' || collapsedWidth === '0px')) {\n                return null;\n            }\n            return (<RcMenu getPopupContainer={getPopupContainer} {...passProps} {...menuProps} prefixCls={prefixCls} onTransitionEnd={this.handleTransitionEnd} onMouseEnter={this.handleMouseEnter}/>);\n        };\n        warning(!('onOpen' in props || 'onClose' in props), 'Menu', '`onOpen` and `onClose` are removed, please use `onOpenChange` instead, ' +\n            'see: https://u.ant.design/menu-on-open-change.');\n        warning(!('inlineCollapsed' in props && props.mode !== 'inline'), 'Menu', '`inlineCollapsed` should only be used when `mode` is inline.');\n        warning(!(props.siderCollapsed !== undefined && 'inlineCollapsed' in props), 'Menu', '`inlineCollapsed` not control Menu under Sider. Should set `collapsed` on Sider instead.');\n        let openKeys;\n        if ('openKeys' in props) {\n            openKeys = props.openKeys;\n        }\n        else if ('defaultOpenKeys' in props) {\n            openKeys = props.defaultOpenKeys;\n        }\n        this.state = {\n            openKeys: openKeys || [],\n            switchingModeFromInline: false,\n            inlineOpenKeys: [],\n            prevProps: props,\n            mounted: false,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevProps } = prevState;\n        const newState = {\n            prevProps: nextProps,\n        };\n        if (prevProps.mode === 'inline' && nextProps.mode !== 'inline') {\n            newState.switchingModeFromInline = true;\n        }\n        if ('openKeys' in nextProps) {\n            newState.openKeys = nextProps.openKeys;\n        }\n        else {\n            // [Legacy] Old code will return after `openKeys` changed.\n            // Not sure the reason, we should keep this logic still.\n            if ((nextProps.inlineCollapsed && !prevProps.inlineCollapsed) ||\n                (nextProps.siderCollapsed && !prevProps.siderCollapsed)) {\n                newState.switchingModeFromInline = true;\n                newState.inlineOpenKeys = prevState.openKeys;\n                newState.openKeys = [];\n            }\n            if ((!nextProps.inlineCollapsed && prevProps.inlineCollapsed) ||\n                (!nextProps.siderCollapsed && prevProps.siderCollapsed)) {\n                newState.openKeys = prevState.inlineOpenKeys;\n                newState.inlineOpenKeys = [];\n            }\n        }\n        return newState;\n    }\n    // [Legacy] Origin code can render full defaultOpenKeys is caused by `rc-animate` bug.\n    // We have to workaround this to prevent animation on first render.\n    // https://github.com/ant-design/ant-design/issues/15966\n    componentDidMount() {\n        this.mountRafId = raf(() => {\n            this.setState({\n                mounted: true,\n            });\n        }, 10);\n    }\n    componentWillUnmount() {\n        raf.cancel(this.mountRafId);\n    }\n    restoreModeVerticalFromInline() {\n        const { switchingModeFromInline } = this.state;\n        if (switchingModeFromInline) {\n            this.setState({\n                switchingModeFromInline: false,\n            });\n        }\n    }\n    setOpenKeys(openKeys) {\n        if (!('openKeys' in this.props)) {\n            this.setState({ openKeys });\n        }\n    }\n    getRealMenuMode() {\n        const inlineCollapsed = this.getInlineCollapsed();\n        if (this.state.switchingModeFromInline && inlineCollapsed) {\n            return 'inline';\n        }\n        const { mode } = this.props;\n        return inlineCollapsed ? 'vertical' : mode;\n    }\n    getInlineCollapsed() {\n        const { inlineCollapsed } = this.props;\n        if (this.props.siderCollapsed !== undefined) {\n            return this.props.siderCollapsed;\n        }\n        return inlineCollapsed;\n    }\n    getMenuOpenAnimation(menuMode) {\n        const { openAnimation, openTransitionName } = this.props;\n        let menuOpenAnimation = openAnimation || openTransitionName;\n        if (openAnimation === undefined && openTransitionName === undefined) {\n            if (menuMode === 'horizontal') {\n                menuOpenAnimation = 'slide-up';\n            }\n            else if (menuMode === 'inline') {\n                menuOpenAnimation = animation;\n            }\n            else {\n                // When mode switch from inline\n                // submenu should hide without animation\n                if (this.state.switchingModeFromInline) {\n                    menuOpenAnimation = '';\n                }\n                else {\n                    menuOpenAnimation = 'zoom-big';\n                }\n            }\n        }\n        return menuOpenAnimation;\n    }\n    render() {\n        return (<MenuContext.Provider value={{\n            inlineCollapsed: this.getInlineCollapsed() || false,\n            antdMenuTheme: this.props.theme,\n        }}>\n        <ConfigConsumer>{this.renderMenu}</ConfigConsumer>\n      </MenuContext.Provider>);\n    }\n}\nInternalMenu.defaultProps = {\n    className: '',\n    theme: 'light',\n    focusable: false,\n};\npolyfill(InternalMenu);\n// We should keep this as ref-able\nexport default class Menu extends React.Component {\n    render() {\n        return (<SiderContext.Consumer>\n        {(context) => <InternalMenu {...this.props} {...context}/>}\n      </SiderContext.Consumer>);\n    }\n}\nMenu.Divider = Divider;\nMenu.Item = Item;\nMenu.SubMenu = SubMenu;\nMenu.ItemGroup = ItemGroup;\n"],"file":"index.js"}