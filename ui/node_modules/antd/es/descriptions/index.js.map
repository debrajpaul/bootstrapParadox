{"version":3,"sources":["descriptions/index.jsx"],"names":["React","classNames","warning","ResponsiveObserve","responsiveArray","ConfigConsumer","DescriptionsItem","children","generateChildrenRows","cloneChildren","column","childrenArray","columnArray","totalRowSpan","Children","forEach","node","push","props","span","length","renderCol","child","bordered","prefixCls","label","className","renderLabelCol","renderContentCol","renderRow","index","layout","isLast","lastChildren","pop","cloneElement","cloneLabelChildren","map","childrenItem","cloneContentChildren","defaultColumnMap","xxl","xl","lg","md","sm","xs","Descriptions","arguments","state","screens","token","subscribe","setState","unsubscribe","i","breakpoint","undefined","getPrefixCls","customizePrefixCls","title","size","style","getColumn","isValidElement","Component","defaultProps","Item"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nconst DescriptionsItem = ({ children }) => children;\n/**\n * Convert children into `column` groups.\n * @param cloneChildren: DescriptionsItem\n * @param column: number\n */\nconst generateChildrenRows = (cloneChildren, column) => {\n    const childrenArray = [];\n    let columnArray = [];\n    let totalRowSpan = 0;\n    React.Children.forEach(cloneChildren, (node) => {\n        columnArray.push(node);\n        if (node.props.span) {\n            totalRowSpan += node.props.span;\n        }\n        else {\n            totalRowSpan += 1;\n        }\n        if (totalRowSpan >= column) {\n            warning(totalRowSpan <= column, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n            childrenArray.push(columnArray);\n            columnArray = [];\n            totalRowSpan = 0;\n        }\n    });\n    if (columnArray.length > 0) {\n        childrenArray.push(columnArray);\n        columnArray = [];\n    }\n    return childrenArray;\n};\n/**\n * This code is for handling react15 does not support returning an array,\n * It can convert a children into th and td\n * @param child DescriptionsItem\n * @returns\n * <>\n *   <th>{DescriptionsItem.label}</th>\n *   <td>{DescriptionsItem.children}</td>\n * </>\n */\nconst renderCol = (child, bordered) => {\n    const { prefixCls, label, className, children, span = 1 } = child.props;\n    if (bordered) {\n        return [\n            <th className={classNames(`${prefixCls}-item-label`, className, {\n                [`${prefixCls}-item-no-label`]: !label,\n            })} key=\"label\">\n        {label}\n      </th>,\n            <td className={classNames(`${prefixCls}-item-content`, className)} key=\"content\" colSpan={span * 2 - 1}>\n        {children}\n      </td>,\n        ];\n    }\n    return (<td colSpan={span} className={classNames(`${prefixCls}-item`, className)}>\n      <span className={classNames(`${prefixCls}-item-label`, {\n        [`${prefixCls}-item-no-label`]: !label,\n    })} key=\"label\">\n        {label}\n      </span>\n      <span className={`${prefixCls}-item-content`} key=\"content\">\n        {children}\n      </span>\n    </td>);\n};\nconst renderLabelCol = (child, bordered) => {\n    const { prefixCls, label, span = 1 } = child.props;\n    if (bordered) {\n        return (<td className={`${prefixCls}-item-label`} key=\"label\" colSpan={span * 2 - 1}>\n        {label}\n      </td>);\n    }\n    return (<td colSpan={span} className={`${prefixCls}-item`}>\n      <span className={`${prefixCls}-item-label`} key=\"label\">\n        {label}\n      </span>\n    </td>);\n};\nconst renderContentCol = (child, bordered) => {\n    const { prefixCls, children, span = 1 } = child.props;\n    if (bordered) {\n        return (<td className={`${prefixCls}-item-content`} key=\"content\" colSpan={span * 2 - 1}>\n        {children}\n      </td>);\n    }\n    return (<td colSpan={span} className={`${prefixCls}-item`}>\n      <span className={`${prefixCls}-item-content`} key=\"content\">\n        {children}\n      </span>\n    </td>);\n};\nconst renderRow = (children, index, { prefixCls, column, isLast }, bordered, layout) => {\n    // copy children,prevent changes to incoming parameters\n    const childrenArray = [...children];\n    let lastChildren = childrenArray.pop();\n    const span = column - childrenArray.length;\n    if (isLast) {\n        lastChildren = React.cloneElement(lastChildren, {\n            span,\n        });\n    }\n    if (layout === 'vertical') {\n        const cloneLabelChildren = React.Children.map(childrenArray, (childrenItem) => {\n            return renderLabelCol(childrenItem, bordered);\n        });\n        const cloneContentChildren = React.Children.map(childrenArray, (childrenItem) => {\n            return renderContentCol(childrenItem, bordered);\n        });\n        return [\n            <tr className={`${prefixCls}-row`} key={`label-${index}`}>\n        {cloneLabelChildren}\n        {renderLabelCol(lastChildren, bordered)}\n      </tr>,\n            <tr className={`${prefixCls}-row`} key={`content-${index}`}>\n        {cloneContentChildren}\n        {renderContentCol(lastChildren, bordered)}\n      </tr>,\n        ];\n    }\n    const cloneChildren = React.Children.map(childrenArray, (childrenItem) => {\n        return renderCol(childrenItem, bordered);\n    });\n    return (<tr className={`${prefixCls}-row`} key={index}>\n      {cloneChildren}\n      {renderCol(lastChildren, bordered)}\n    </tr>);\n};\nconst defaultColumnMap = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nclass Descriptions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            screens: {},\n        };\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.token = ResponsiveObserve.subscribe(screens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            this.setState({\n                screens,\n            });\n        });\n    }\n    componentWillUnmount() {\n        ResponsiveObserve.unsubscribe(this.token);\n    }\n    getColumn() {\n        const { column } = this.props;\n        if (typeof column === 'object') {\n            for (let i = 0; i < responsiveArray.length; i++) {\n                const breakpoint = responsiveArray[i];\n                if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n                    return column[breakpoint] || defaultColumnMap[breakpoint];\n                }\n            }\n        }\n        //If the configuration is not an object, it is a number, return number\n        if (typeof column === 'number') {\n            return column;\n        }\n        // If it is an object, but no response is found, this happens only in the test.\n        // Maybe there are some strange environments\n        return 3;\n    }\n    render() {\n        return (<ConfigConsumer>\n        {({ getPrefixCls }) => {\n            const { className, prefixCls: customizePrefixCls, title, size, children, bordered = false, layout = 'horizontal', style, } = this.props;\n            const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n            const column = this.getColumn();\n            const cloneChildren = React.Children.map(children, (child) => {\n                if (React.isValidElement(child)) {\n                    return React.cloneElement(child, {\n                        prefixCls,\n                    });\n                }\n                return child;\n            });\n            const childrenArray = generateChildrenRows(cloneChildren, column);\n            return (<div className={classNames(prefixCls, className, {\n                [`${prefixCls}-${size}`]: size !== 'default',\n                [`${prefixCls}-bordered`]: !!bordered,\n            })} style={style}>\n              {title && <div className={`${prefixCls}-title`}>{title}</div>}\n              <div className={`${prefixCls}-view`}>\n                <table>\n                  <tbody>\n                    {childrenArray.map((child, index) => renderRow(child, index, {\n                prefixCls,\n                column,\n                isLast: index + 1 === childrenArray.length,\n            }, bordered, layout))}\n                  </tbody>\n                </table>\n              </div>\n            </div>);\n        }}\n      </ConfigConsumer>);\n    }\n}\nDescriptions.defaultProps = {\n    size: 'default',\n    column: defaultColumnMap,\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n"],"file":"index.js"}