{"version":3,"sources":["locale-provider/index.jsx"],"names":["React","PropTypes","moment","interopDefault","changeConfirmLocale","setMomentLocale","locale","LocaleProvider","props","Modal","antLocale","exist","prevProps","Children","only","children","Component","propTypes","object","defaultProps","childContextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,mBAAT,QAAoC,iBAApC;;AACA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC7B,MAAIA,MAAM,IAAIA,MAAM,CAACA,MAArB,EAA6B;AACzBH,IAAAA,cAAc,CAACD,MAAD,CAAd,CAAuBI,MAAvB,CAA8BA,MAAM,CAACA,MAArC;AACH,GAFD,MAGK;AACDH,IAAAA,cAAc,CAACD,MAAD,CAAd,CAAuBI,MAAvB,CAA8B,IAA9B;AACH;AACJ;;IACoBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AACAH,IAAAA,eAAe,CAACG,KAAK,CAACF,MAAP,CAAf;AACAF,IAAAA,mBAAmB,CAACI,KAAK,CAACF,MAAN,IAAgBE,KAAK,CAACF,MAAN,CAAaG,KAA9B,CAAnB;AAHe;AAIlB;;;;sCACiB;AACd,aAAO;AACHC,QAAAA,SAAS,EAAE,SAAc,EAAd,EAAkB,KAAKF,KAAL,CAAWF,MAA7B,EAAqC;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAArC;AADR,OAAP;AAGH;;;uCACkBC,S,EAAW;AAAA,UAClBN,MADkB,GACP,KAAKE,KADE,CAClBF,MADkB;;AAE1B,UAAIM,SAAS,CAACN,MAAV,KAAqBA,MAAzB,EAAiC;AAC7BD,QAAAA,eAAe,CAACC,MAAD,CAAf;AACH;;AACDF,MAAAA,mBAAmB,CAACE,MAAM,IAAIA,MAAM,CAACG,KAAlB,CAAnB;AACH;;;2CACsB;AACnBL,MAAAA,mBAAmB;AACtB;;;6BACQ;AACL,aAAOJ,KAAK,CAACa,QAAN,CAAeC,IAAf,CAAoB,KAAKN,KAAL,CAAWO,QAA/B,CAAP;AACH;;;;EAvBuCf,KAAK,CAACgB,S;;SAA7BT,c;AAyBrBA,cAAc,CAACU,SAAf,GAA2B;AACvBX,EAAAA,MAAM,EAAEL,SAAS,CAACiB;AADK,CAA3B;AAGAX,cAAc,CAACY,YAAf,GAA8B;AAC1Bb,EAAAA,MAAM,EAAE;AADkB,CAA9B;AAGAC,cAAc,CAACa,iBAAf,GAAmC;AAC/BV,EAAAA,SAAS,EAAET,SAAS,CAACiB;AADU,CAAnC","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport * as moment from 'moment';\nimport interopDefault from '../_util/interopDefault';\nimport { changeConfirmLocale } from '../modal/locale';\nfunction setMomentLocale(locale) {\n    if (locale && locale.locale) {\n        interopDefault(moment).locale(locale.locale);\n    }\n    else {\n        interopDefault(moment).locale('en');\n    }\n}\nexport default class LocaleProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        setMomentLocale(props.locale);\n        changeConfirmLocale(props.locale && props.locale.Modal);\n    }\n    getChildContext() {\n        return {\n            antLocale: Object.assign({}, this.props.locale, { exist: true }),\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { locale } = this.props;\n        if (prevProps.locale !== locale) {\n            setMomentLocale(locale);\n        }\n        changeConfirmLocale(locale && locale.Modal);\n    }\n    componentWillUnmount() {\n        changeConfirmLocale();\n    }\n    render() {\n        return React.Children.only(this.props.children);\n    }\n}\nLocaleProvider.propTypes = {\n    locale: PropTypes.object,\n};\nLocaleProvider.defaultProps = {\n    locale: {},\n};\nLocaleProvider.childContextTypes = {\n    antLocale: PropTypes.object,\n};\n"],"file":"index.js"}